class Poto{
  name:string
  link:string
  next:boolean
  nextValue:Poto[]

  constructor(name:string , link:string, next:boolean, nextValue:Poto[]) {
    this.name = name
    this.link = link
    this.next = next
    this.nextValue = nextValue
  }
}

export const datas:Poto[] = [
  {
    name:"TypeScript",
    link:'../detail/TypeScript-course.html',
    next: false,
    nextValue:[]
  },
  {
    name:"Serializable",
    link:'../detail/Serializable.html',
    next: false,
    nextValue:[]
  },
  {
    name:"EasyPOI",
    link:'../detail/EasyPOI.html',
    next: false,
    nextValue:[]
  },
  {
    name:"Nginx",
    link:'../detail/Nginx.html',
    next: false,
    nextValue:[]
  },
  {
    name:"Docker",
    link:'../detail/Docker.html',
    next: false,
    nextValue:[]
  },
  {
    name:"Vue.js+Vite.js+TypeScript",
    link:'../detail/VVT.html',
    next: false,
    nextValue:[]
  },
  {
    name:"基于Java的设计模式",
    link:'../detail/design-patterns',
    next: true,
    nextValue:[
      {
        name:'工厂模式',
        link:'../detail/design-patterns/01.html',
        next:false,
        nextValue:[]
      },
      {
        name:'抽象工厂模式',
        link:'../detail/design-patterns/02.html',
        next:false,
        nextValue:[]
      },
      {
        name:'建造者模式',
        link:'../detail/design-patterns/03.html',
        next:false,
        nextValue:[]
      },
      {
        name:'原型模式',
        link:'../detail/design-patterns/04.html',
        next:false,
        nextValue:[]
      },
      {
        name:'单例模式',
        link:'../detail/design-patterns/05.html',
        next:false,
        nextValue:[]
      },
      {
        name:'适配器模式',
        link:'../detail/design-patterns/06.html',
        next:false,
        nextValue:[]
      },
      {
        name:'桥接模式',
        link:'../detail/design-patterns/07.html',
        next:false,
        nextValue:[]
      },
      {
        name:'组合模式',
        link:'../detail/design-patterns/08.html',
        next:false,
        nextValue:[]
      },
      {
        name:'装饰器模式',
        link:'../detail/design-patterns/09.html',
        next:false,
        nextValue:[]
      },
      {
        name:'外观模式',
        link:'../detail/design-patterns/10.html',
        next:false,
        nextValue:[]
      },
      {
        name:'享元模式',
        link:'../detail/design-patterns/11.html',
        next:false,
        nextValue:[]
      },
      {
        name:'代理模式',
        link:'../detail/design-patterns/12.html',
        next:false,
        nextValue:[]
      },
      {
        name:'责任链模式',
        link:'../detail/design-patterns/13.html',
        next:false,
        nextValue:[]
      },
      {
        name:'命令模式',
        link:'../detail/design-patterns/14.html',
        next:false,
        nextValue:[]
      },
      {
        name:'迭代器模式',
        link:'../detail/design-patterns/15.html',
        next:false,
        nextValue:[]
      },
      {
        name:'中介者模式',
        link:'../detail/design-patterns/16.html',
        next:false,
        nextValue:[]
      },
      {
        name:'备忘录模式',
        link:'../detail/design-patterns/17.html',
        next:false,
        nextValue:[]
      },
      {
        name:'观察者模式',
        link:'../detail/design-patterns/18.html',
        next:false,
        nextValue:[]
      },
      {
        name:'状态模式',
        link:'../detail/design-patterns/19.html',
        next:false,
        nextValue:[]
      },
      {
        name:'策略模式',
        link:'../detail/design-patterns/20.html',
        next:false,
        nextValue:[]
      },
      {
        name:'模板模式',
        link:'../detail/design-patterns/21.html',
        next:false,
        nextValue:[]
      },
      {
        name:'访问者模式',
        link:'../detail/design-patterns/22.html',
        next:false,
        nextValue:[]
      }
    ]
  },
]
